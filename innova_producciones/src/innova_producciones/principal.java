/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package innova_producciones;

import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.ImageIcon;
import java.sql.*;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JSpinner.DefaultEditor;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author felix
 */
public class principal extends javax.swing.JFrame {

    ArrayList<Cliente> clientes = new ArrayList();

    /**
     * Creates new form principal
     */
    public principal() throws SQLException {
        initComponents();
        this.setLocationRelativeTo(null);
        Image img = Toolkit.getDefaultToolkit().createImage(getClass().getResource("innova.png")).getScaledInstance(520, 300, 0);
        imagen_principal.setIcon(new ImageIcon(img));

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            con = DriverManager.getConnection(connection);

        } catch (Exception ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        cliente();
        refresh();
        ((DefaultEditor)sp_EvtPersonas.getEditor()).getTextField().setEditable(false);
        ((DefaultEditor)sp_EvtDur.getEditor()).getTextField().setEditable(false);
    }
    String connection = "jdbc:sqlserver://localhost:1433;databaseName=INNOVA;user=innova;password=12345";
    Connection con = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_inventario = new javax.swing.JDialog();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        codigo_inventario = new javax.swing.JTextField();
        nombre_inventario = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt_inventario = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        descripcion_inventario = new javax.swing.JTextArea();
        error = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jd_personal = new javax.swing.JDialog();
        jLabel6 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        tf_puestoPersonal = new javax.swing.JTextField();
        tf_telefonoPersonal = new javax.swing.JTextField();
        tf_nombrePersonal = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jt_personal = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jd_evento = new javax.swing.JDialog();
        jLabel22 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane4 = new javax.swing.JScrollPane();
        jt_Evts = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        tf_EvtUbicacion = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        tf_EvtTipo = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        sp_EvtPersonas = new javax.swing.JSpinner();
        ftf_EvtFecha = new javax.swing.JFormattedTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        ftf_EvtHora = new javax.swing.JFormattedTextField();
        jLabel28 = new javax.swing.JLabel();
        cb_EvtCliente = new javax.swing.JComboBox<>();
        jl_AddEvt = new javax.swing.JLabel();
        jl_DelEvt = new javax.swing.JLabel();
        jl_EditEvt = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        sp_EvtDur = new javax.swing.JSpinner();
        jLabel31 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jd_cliente = new javax.swing.JDialog();
        telefono_cliente = new javax.swing.JTextField();
        Nombre_Cliente = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel36 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        Tabla_Clientes = new javax.swing.JTable();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        Cliente_Empresa = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        Contacto_Cliente = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        label_eventos = new javax.swing.JLabel();
        label_menu = new javax.swing.JLabel();
        imagen_principal = new javax.swing.JLabel();
        label_cliente = new javax.swing.JLabel();
        label_personal = new javax.swing.JLabel();
        label_inventario = new javax.swing.JLabel();
        Background_principal = new javax.swing.JLabel();

        jd_inventario.setForeground(new java.awt.Color(0, 0, 51));
        jd_inventario.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Leelawadee", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Inventario Propio");
        jd_inventario.getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 160, 40));
        jd_inventario.getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 150, 10));

        jLabel2.setFont(new java.awt.Font("Leelawadee", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Codigo");
        jd_inventario.getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, 50, 20));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innova_producciones/tela-polar-azul-marino.jpg"))); // NOI18N
        jLabel3.setText("jLabel3");
        jd_inventario.getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 530));

        jLabel4.setFont(new java.awt.Font("Leelawadee", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nombre");
        jd_inventario.getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, -1, -1));
        jd_inventario.getContentPane().add(codigo_inventario, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, 160, -1));
        jd_inventario.getContentPane().add(nombre_inventario, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, 160, -1));

        jLabel7.setFont(new java.awt.Font("Leelawadee", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Descripcion");
        jd_inventario.getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innova_producciones/buttoncolor.PNG"))); // NOI18N
        jLabel8.setText("jLabel8");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        jd_inventario.getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 210, 90, 30));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innova_producciones/Delete.PNG"))); // NOI18N
        jLabel9.setText("jLabel9");
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });
        jd_inventario.getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 470, 50, 40));

        jt_inventario.setForeground(new java.awt.Color(0, 0, 51));
        jt_inventario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombe", "Descripcion", "En Uso"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Byte.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jt_inventario);

        jd_inventario.getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 250, 490, 210));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innova_producciones/Modify.PNG"))); // NOI18N
        jLabel10.setText("jLabel10");
        jd_inventario.getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 470, 50, 40));

        descripcion_inventario.setColumns(20);
        descripcion_inventario.setRows(5);
        jScrollPane2.setViewportView(descripcion_inventario);

        jd_inventario.getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 100, -1, -1));

        error.setForeground(new java.awt.Color(255, 0, 0));
        jd_inventario.getContentPane().add(error, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, 20, 20));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innova_producciones/textura-fondo-azul-1573.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jd_inventario.getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 530));

        jd_personal.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                jd_personalWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                jd_personalWindowOpened(evt);
            }
        });
        jd_personal.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Leelawadee", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Personal");
        jd_personal.getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 160, 40));
        jd_personal.getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 150, 10));

        jLabel11.setFont(new java.awt.Font("Leelawadee", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Puesto");
        jd_personal.getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, 50, 20));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innova_producciones/tela-polar-azul-marino.jpg"))); // NOI18N
        jLabel12.setText("jLabel3");
        jd_personal.getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 530));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innova_producciones/tela-polar-azul-marino.jpg"))); // NOI18N
        jLabel13.setText("jLabel3");
        jd_personal.getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 530));
        jd_personal.getContentPane().add(tf_puestoPersonal, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 140, 160, -1));
        jd_personal.getContentPane().add(tf_telefonoPersonal, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, 160, -1));
        jd_personal.getContentPane().add(tf_nombrePersonal, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 100, 160, -1));

        jLabel14.setFont(new java.awt.Font("Leelawadee", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Nombre");
        jd_personal.getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, -1, -1));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innova_producciones/buttoncolor.PNG"))); // NOI18N
        jLabel15.setText("jLabel8");
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });
        jd_personal.getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 190, 90, 30));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innova_producciones/Delete.PNG"))); // NOI18N
        jLabel16.setText("jLabel9");
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
        });
        jd_personal.getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 470, 50, 40));

        jLabel20.setFont(new java.awt.Font("Leelawadee", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Teléfono");
        jd_personal.getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, 60, 20));

        jt_personal.setForeground(new java.awt.Color(0, 0, 51));
        jt_personal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Teléfono", "Nombre", "Puesto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jt_personal);

        jd_personal.getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 250, 490, 210));

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innova_producciones/Modify.PNG"))); // NOI18N
        jLabel17.setText("jLabel10");
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel17MouseClicked(evt);
            }
        });
        jd_personal.getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 470, 50, 40));

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innova_producciones/textura-fondo-azul-1573.jpg"))); // NOI18N
        jLabel18.setText("jLabel1");
        jd_personal.getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 560));

        jd_evento.setResizable(false);
        jd_evento.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Eventos");
        jd_evento.getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 130, 50));
        jd_evento.getContentPane().add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 130, 10));

        jScrollPane4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jt_Evts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Ubicación", "Tipo", "Cantidad de Personas", "Fecha", "Duracion", "ID Cliente"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jt_Evts);

        jd_evento.getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 330, 680, 260));

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innova_producciones/tela-polar-azul-marino.jpg"))); // NOI18N
        jLabel21.setToolTipText("");
        jd_evento.getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 690));

        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Ubicación: ");
        jd_evento.getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, -1, -1));
        jd_evento.getContentPane().add(tf_EvtUbicacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 40, 460, -1));

        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Tipo de evento: ");
        jd_evento.getContentPane().add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, -1, -1));

        tf_EvtTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_EvtTipoActionPerformed(evt);
            }
        });
        jd_evento.getContentPane().add(tf_EvtTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 80, 460, -1));

        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Personas: ");
        jd_evento.getContentPane().add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 120, -1, -1));

        sp_EvtPersonas.setModel(new javax.swing.SpinnerNumberModel(0, 0, 9999, 1));
        jd_evento.getContentPane().add(sp_EvtPersonas, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 120, 60, -1));

        try {
            ftf_EvtFecha.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jd_evento.getContentPane().add(ftf_EvtFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 162, 460, 30));

        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Fecha (AAAA/MM/DD):");
        jd_evento.getContentPane().add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 140, -1));

        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Hora: ");
        jd_evento.getContentPane().add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 210, -1, -1));

        try {
            ftf_EvtHora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jd_evento.getContentPane().add(ftf_EvtHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 210, 240, -1));

        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Cliente: ");
        jd_evento.getContentPane().add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 250, -1, -1));

        jd_evento.getContentPane().add(cb_EvtCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 250, 370, -1));

        jl_AddEvt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innova_producciones/buttoncolor.PNG"))); // NOI18N
        jl_AddEvt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_AddEvtMouseClicked(evt);
            }
        });
        jd_evento.getContentPane().add(jl_AddEvt, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 280, 100, -1));

        jl_DelEvt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innova_producciones/Delete.PNG"))); // NOI18N
        jl_DelEvt.setToolTipText("");
        jl_DelEvt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_DelEvtMouseClicked(evt);
            }
        });
        jd_evento.getContentPane().add(jl_DelEvt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 600, 50, 50));

        jl_EditEvt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innova_producciones/Modify.PNG"))); // NOI18N
        jl_EditEvt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_EditEvtMouseClicked(evt);
            }
        });
        jd_evento.getContentPane().add(jl_EditEvt, new org.netbeans.lib.awtextra.AbsoluteConstraints(268, 600, 50, 50));

        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Duracion: ");
        jd_evento.getContentPane().add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 120, -1, -1));

        sp_EvtDur.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        jd_evento.getContentPane().add(sp_EvtDur, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 120, 50, -1));

        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("Hora(s)");
        jd_evento.getContentPane().add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 120, -1, -1));

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innova_producciones/textura-fondo-azul-1573.jpg"))); // NOI18N
        jd_evento.getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, -4, 910, 700));

        jd_cliente.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jd_cliente.getContentPane().add(telefono_cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 60, 160, -1));
        jd_cliente.getContentPane().add(Nombre_Cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 160, -1));

        jLabel32.setFont(new java.awt.Font("Leelawadee", 0, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Correo");
        jd_cliente.getContentPane().add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, 50, 20));

        jLabel33.setFont(new java.awt.Font("Leelawadee", 0, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("Telèfono");
        jd_cliente.getContentPane().add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, -1, -1));

        jLabel34.setFont(new java.awt.Font("Leelawadee", 0, 14)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("Nombre Empresa");
        jd_cliente.getContentPane().add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 150, -1, -1));

        jLabel35.setFont(new java.awt.Font("Leelawadee", 1, 16)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("Clientes");
        jd_cliente.getContentPane().add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 160, 40));
        jd_cliente.getContentPane().add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 150, 10));

        jLabel36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innova_producciones/tela-polar-azul-marino.jpg"))); // NOI18N
        jLabel36.setText("jLabel3");
        jd_cliente.getContentPane().add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 530));

        Tabla_Clientes.setForeground(new java.awt.Color(0, 0, 51));
        Tabla_Clientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Telefono", "Correo", "Nombre del CLiente", "Nombre de ls Empresa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane5.setViewportView(Tabla_Clientes);

        jd_cliente.getContentPane().add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 250, 600, 210));

        jLabel37.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innova_producciones/buttoncolor.PNG"))); // NOI18N
        jLabel37.setText("jLabel8");
        jLabel37.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel37MouseClicked(evt);
            }
        });
        jd_cliente.getContentPane().add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 210, 90, 30));

        jLabel38.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innova_producciones/Delete.PNG"))); // NOI18N
        jLabel38.setText("jLabel9");
        jd_cliente.getContentPane().add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 470, 50, 40));

        jLabel39.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innova_producciones/Modify.PNG"))); // NOI18N
        jLabel39.setText("jLabel10");
        jd_cliente.getContentPane().add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 470, 50, 40));
        jd_cliente.getContentPane().add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 60, 160, -1));
        jd_cliente.getContentPane().add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 60, 160, -1));
        jd_cliente.getContentPane().add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 60, 160, -1));
        jd_cliente.getContentPane().add(Cliente_Empresa, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 150, 160, -1));

        jLabel40.setFont(new java.awt.Font("Leelawadee", 0, 14)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setText("Nombre_Contacto");
        jd_cliente.getContentPane().add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, -1, -1));
        jd_cliente.getContentPane().add(Contacto_Cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, 160, -1));

        jLabel41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innova_producciones/textura-fondo-azul-1573.jpg"))); // NOI18N
        jLabel41.setText("jLabel1");
        jd_cliente.getContentPane().add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 570));
        jd_cliente.getContentPane().add(jTextField10, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, 160, -1));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("INNOVA PRODUCCIONES");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label_eventos.setFont(new java.awt.Font("Leelawadee", 1, 16)); // NOI18N
        label_eventos.setForeground(new java.awt.Color(255, 255, 255));
        label_eventos.setLabelFor(Background_principal);
        label_eventos.setText("Eventos");
        label_eventos.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                label_eventosMouseMoved(evt);
            }
        });
        label_eventos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_eventosMouseClicked(evt);
            }
        });
        getContentPane().add(label_eventos, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 320, 160, 40));

        label_menu.setFont(new java.awt.Font("Leelawadee", 1, 18)); // NOI18N
        label_menu.setForeground(new java.awt.Color(255, 255, 255));
        label_menu.setText("MENU PRINCIPAL");
        getContentPane().add(label_menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 160, 40));
        getContentPane().add(imagen_principal, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, 520, 400));

        label_cliente.setFont(new java.awt.Font("Leelawadee", 1, 16)); // NOI18N
        label_cliente.setForeground(new java.awt.Color(255, 255, 255));
        label_cliente.setText("Clientes");
        label_cliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_clienteMouseClicked(evt);
            }
        });
        label_cliente.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                label_clienteMouseMoved(evt);
            }
        });
        getContentPane().add(label_cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, 140, 50));

        label_personal.setFont(new java.awt.Font("Leelawadee", 1, 16)); // NOI18N
        label_personal.setForeground(new java.awt.Color(255, 255, 255));
        label_personal.setText("Personal");
        label_personal.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                label_personalMouseMoved(evt);
            }
        });
        label_personal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_personalMouseClicked(evt);
            }
        });
        getContentPane().add(label_personal, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 140, 40));

        label_inventario.setFont(new java.awt.Font("Leelawadee", 1, 16)); // NOI18N
        label_inventario.setForeground(new java.awt.Color(255, 255, 255));
        label_inventario.setText("Control de Inventario");
        label_inventario.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                label_inventarioMouseMoved(evt);
            }
        });
        label_inventario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_inventarioMouseClicked(evt);
            }
        });
        getContentPane().add(label_inventario, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, 170, 40));

        Background_principal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innova_producciones/abstracto-azul-3d-fondos-hd-4389df3.jpg"))); // NOI18N
        Background_principal.setText("jLabel1");
        Background_principal.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                Background_principalMouseMoved(evt);
            }
        });
        getContentPane().add(Background_principal, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, 0, 810, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void label_clienteMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_clienteMouseMoved
        label_cliente.setForeground(Color.yellow);
        ImageIcon icon = new ImageIcon(getClass().getResource("clients.png"));
        imagen_principal.setIcon(icon);
    }//GEN-LAST:event_label_clienteMouseMoved

    private void Background_principalMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Background_principalMouseMoved
        label_cliente.setForeground(Color.WHITE);
        label_personal.setForeground(Color.WHITE);
        label_inventario.setForeground(Color.WHITE);
        label_eventos.setForeground(Color.WHITE);
        Image img = Toolkit.getDefaultToolkit().createImage(getClass().getResource("innova.png")).getScaledInstance(520, 300, 0);
        imagen_principal.setIcon(new ImageIcon(img));
    }//GEN-LAST:event_Background_principalMouseMoved

    private void label_personalMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_personalMouseMoved
        label_personal.setForeground(Color.yellow);
        ImageIcon icon = new ImageIcon(getClass().getResource("personal.png"));
        imagen_principal.setIcon(icon);
    }//GEN-LAST:event_label_personalMouseMoved

    private void label_inventarioMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_inventarioMouseMoved
        label_inventario.setForeground(Color.yellow);
        ImageIcon icon = new ImageIcon(getClass().getResource("invent.png"));
        imagen_principal.setIcon(icon);
    }//GEN-LAST:event_label_inventarioMouseMoved

    private void label_inventarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_inventarioMouseClicked
        jd_inventario.setVisible(true);
        jd_inventario.setLocationRelativeTo(this);
        jd_inventario.pack();
        jd_inventario.setModal(true);
    }//GEN-LAST:event_label_inventarioMouseClicked

    private void jd_personalWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jd_personalWindowOpened
        actualizar(jt_personal);
    }//GEN-LAST:event_jd_personalWindowOpened

    private void label_personalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_personalMouseClicked
        jd_personal.setVisible(true);
        jd_personal.setLocationRelativeTo(this);
        jd_personal.pack();
        jd_personal.setModal(true);
    }//GEN-LAST:event_label_personalMouseClicked

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        try {
            PreparedStatement statement = con.prepareStatement("insert into Personal (teléfono, nombre, puesto) values (?,?,?)");
            int telefono = Integer.parseInt(tf_telefonoPersonal.getText());
            String nombre = tf_nombrePersonal.getText();
            String puesto = tf_puestoPersonal.getText();
            statement.setInt(1, telefono);
            statement.setString(2, nombre);
            statement.setString(3, puesto);;
            this.tf_telefonoPersonal.setText("");
            this.tf_nombrePersonal.setText("");
            this.tf_puestoPersonal.setText("");
            int retorno = statement.executeUpdate();
            if (retorno > 0) {
                JOptionPane.showMessageDialog(this, "Contacto creado");
            }
            actualizar(jt_personal);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jLabel15MouseClicked

    private void jLabel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseClicked
        int fila = jt_personal.getSelectedRow();
        int columna = jt_personal.getSelectedColumn();
        if (fila != -1) {
            idBuscar = Integer.parseInt(jt_personal.getValueAt(fila, 0).toString());
            if (columna == 0) {
                JOptionPane.showMessageDialog(this, "El id no es modificable, seleccione otro dato.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (columna == 1) {
                cambiarTelefono();
            } else if (columna == 2) {
                cambiarNombre();
            } else if (columna == 3) {
                cambiarPuesto();
            } else {
                JOptionPane.showMessageDialog(this, "Seleccione un dato a modificar.", "No hay datos seleccionados en la columna", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un dato a modificar.", "No hay datos seleccionados", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jLabel17MouseClicked

    private void jd_personalWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jd_personalWindowClosing
        this.setVisible(true);
    }//GEN-LAST:event_jd_personalWindowClosing

    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
        int fila = jt_personal.getSelectedRow();
        if (fila != -1) {
            idBuscar = Integer.parseInt(jt_personal.getValueAt(fila, 0).toString());
            borrarPersonal();
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un dato a eliminar.", "No hay datos seleccionados", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jLabel16MouseClicked

    private void label_eventosMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_eventosMouseMoved
        label_eventos.setForeground(Color.yellow);
        ImageIcon icon = new ImageIcon(getClass().getResource("events.png"));
        imagen_principal.setIcon(icon);
    }//GEN-LAST:event_label_eventosMouseMoved

    private void label_eventosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_eventosMouseClicked

        jd_evento.pack();
        jd_evento.setLocationRelativeTo(this);
        jd_evento.setModal(true);
        tf_EvtUbicacion.setText("");
        tf_EvtTipo.setText("");
        sp_EvtPersonas.setValue(0);
        ftf_EvtFecha.setText("");
        ftf_EvtHora.setText("");
        cb_EvtCliente.setSelectedIndex(-1);
        try {
            if (con.isClosed()) {
                con = DriverManager.getConnection(connection);
            }
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select ID,Nombre_Empresa from Clientes");
            DefaultComboBoxModel cbm = new DefaultComboBoxModel();
            while (rs.next()) {
                cbm.addElement(rs.getInt(1) + ".- " + rs.getString(2));
            }
            cb_EvtCliente.setModel(cbm);
            rs.close();
            st.close();
            ReloadEvents();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        jd_evento.setVisible(true);
    }//GEN-LAST:event_label_eventosMouseClicked

    private void tf_EvtTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_EvtTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_EvtTipoActionPerformed

    private void jl_AddEvtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_AddEvtMouseClicked
        try {
            Statement st = con.createStatement();
            //String[] pFecha=ftf_EvtFecha.getText().split("/");
            //DateFormat df=new SimpleDateFormat("MM/dd/YYYY");
            // java.util.Date dat= df.parse(ftf_EvtFecha.getText());
            //System.out.println(dat.toString());
            String idC = cb_EvtCliente.getSelectedItem().toString();
            idC = idC.substring(0, idC.indexOf(".-"));
            st.executeUpdate("insert into Evento values ('" + tf_EvtUbicacion.getText() + "','" + tf_EvtTipo.getText() + "'," + sp_EvtPersonas.getValue() + ",GETDATE()," + sp_EvtDur.getValue() + "," + idC + ")");
            ReloadEvents();
            tf_EvtUbicacion.setText("");
            tf_EvtTipo.setText("");
            sp_EvtPersonas.setValue(0);
            sp_EvtDur.setValue(1);
            ftf_EvtFecha.setText("");
            ftf_EvtHora.setText("");
            cb_EvtCliente.setSelectedIndex(0);
        } catch (SQLException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jl_AddEvtMouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        try {

            if (!codigo_inventario.getText().isEmpty()) {
                error.setText("");
                Statement st = con.createStatement();
                int codigo = Integer.parseInt(codigo_inventario.getText());
                String nombre = nombre_inventario.getText();
                String descripcion = descripcion_inventario.getText();
                if (nombre.isEmpty()) {
                    nombre = "N/A";
                }
                st.execute("insert Inventario values (" + codigo + ",'" + nombre + "','" + descripcion + "'," + 0 + ")");
                JOptionPane.showMessageDialog(jd_inventario, "¡Se ha agregado al Inventario con éxito!");
                codigo_inventario.setText("");
                nombre_inventario.setText("");
                descripcion_inventario.setText("");
            } else {
                JOptionPane.showMessageDialog(jd_inventario, "¡Ingrese el codigo!!");
                error.setText("*");

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(jd_inventario, "ERROR!\nEl codigo que se ha ingresado no es válido");
        }

        refresh();
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        if (jt_inventario.getSelectedRow() >= 0) {
            try {
                Statement st = con.createStatement();
                int codigo = Integer.parseInt(jt_inventario.getValueAt(jt_inventario.getSelectedRow(), 0).toString());
                st.execute("Delete Inventario from Inventario where Código =" + codigo);
                JOptionPane.showMessageDialog(jd_inventario, "¡Se Elimino el objeto del inventario exitosamente!");
                refresh();
            } catch (Exception e) {

            }

        }
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jl_DelEvtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_DelEvtMouseClicked
        try {
            if (jt_Evts.getSelectedRow() != -1) {
                int op = JOptionPane.showConfirmDialog(jd_evento, "Eliminar este evento eliminará los registros vinculados a el. Desea continuar?", "Confirmar eliminación", JOptionPane.OK_CANCEL_OPTION);
                if (op == JOptionPane.OK_OPTION) {
                    DefaultTableModel mod = (DefaultTableModel) jt_Evts.getModel();
                    int id = (Integer) mod.getValueAt(jt_Evts.getSelectedRow(), 0);
                    Statement st = con.createStatement();
                    st.executeUpdate("delete from Eventos_Personal where Código_Evento=" + id);
                    st.executeUpdate("delete from Eventos_Producto_Rentado where Código_Evento=" + id);
                    st.executeUpdate("delete from Inventario_Eventos where Código_Evento=" + id);
                    st.executeUpdate("delete from Detalle_de_venta where Código_Evento=" + id);
                    st.executeUpdate("delete from Evento where Código=" + id);
                    st.execute("declare @cod int select @cod=max(Código) from Evento DBCC CHECKIDENT (Evento,RESEED,@cod)");
                    ReloadEvents();
                }
            } else {
                JOptionPane.showMessageDialog(jd_evento, "Seleccione un evento de la tabla para eliminar");
            }
        } catch (SQLException | HeadlessException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jl_DelEvtMouseClicked

    private void jl_EditEvtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_EditEvtMouseClicked
        try {
            if (jt_Evts.getSelectedRow() != -1) {
                int fila = jt_Evts.getSelectedColumn();
                if (fila > 0) {
                    DefaultTableModel mod = (DefaultTableModel) jt_Evts.getModel();
                    int col = jt_Evts.getSelectedRow();
                    int id = (Integer) mod.getValueAt(col, 0);

                    Statement st = con.createStatement();
                    if (fila == 1) {
                        String nUbic = JOptionPane.showInputDialog(jd_evento, "Ingrese la nueva ubicación: ", "Cambio de ubicación", JOptionPane.QUESTION_MESSAGE);
                        st.executeUpdate("update Evento set Ubicación='" + nUbic + "' where Código=" + id);

                    } else if (fila == 2) {
                        String nTipo = JOptionPane.showInputDialog(jd_evento, "Ingrese el nuevo tipo de evento: ", "Cambio de tipo", JOptionPane.QUESTION_MESSAGE);
                        st.executeUpdate("update Evento set Tipo='" + nTipo + "' where Código=" + id);

                    } else if (fila == 3) {
                        String nPersonas = JOptionPane.showInputDialog(jd_evento, "Ingrese la nueva cantidad de invitados: ", "Cambio de personas", JOptionPane.QUESTION_MESSAGE);
                        if (nPersonas.matches("\\d+$")) {
                            st.executeUpdate("update Evento set Cantidad_personas=" + Integer.parseInt(nPersonas) + " where Código=" + id);

                        } else {
                            JOptionPane.showMessageDialog(jd_evento, "Valor invalido");

                        }
                    } else if (fila == 4) {

                    } else if (fila == 5) {
                        String nDur = JOptionPane.showInputDialog(jd_evento, "Ingrese la nueva duracion(horas) del evento: ", "Cambio de duracion", JOptionPane.QUESTION_MESSAGE);
                        if (nDur.matches("\\d+$")) {
                            st.executeUpdate("update Evento set Duracion=" + Integer.parseInt(nDur) + " where Código=" + id);
                        } else {
                            JOptionPane.showMessageDialog(jd_evento, "Valor invalido");
                        }
                    } else if (fila == 6) {
                        String nCliente = JOptionPane.showInputDialog(jd_evento, "Ingrese el id del nuevo cliente: ", "Cambio de cliente", JOptionPane.QUESTION_MESSAGE);
                        if (nCliente.matches("\\d+$")) {
                            ResultSet rs = st.executeQuery("select * from Clientes where ID=" + Integer.parseInt(nCliente));
                            if (rs.next()) {
                                st.executeUpdate("update Evento set ID_Cliente=" + Integer.parseInt(nCliente) + " where Código=" + id);
                            } else {
                                JOptionPane.showMessageDialog(jd_evento, "No existe un cliente con esa id");
                            }
                        } else {
                            JOptionPane.showMessageDialog(jd_evento, "Valor invalido");
                        }
                    }
                    ReloadEvents();
                } else {
                    JOptionPane.showMessageDialog(jd_evento, "Seleccione otra columna: El código no se puede modificar");
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jl_EditEvtMouseClicked

    private void jLabel37MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel37MouseClicked
        try {
            //TODO add your handling code here:
            ag_cliente_sql();
        } catch (SQLException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        agregar_tabla();
    }//GEN-LAST:event_jLabel37MouseClicked

    private void label_clienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_clienteMouseClicked
        this.jd_cliente.setVisible(true);
        this.jd_cliente.setLocationRelativeTo(this);
        this.jd_cliente.pack();
        this.jd_cliente.setModal(true);
    }//GEN-LAST:event_label_clienteMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new principal().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background_principal;
    private javax.swing.JTextField Cliente_Empresa;
    private javax.swing.JTextField Contacto_Cliente;
    private javax.swing.JTextField Nombre_Cliente;
    private javax.swing.JTable Tabla_Clientes;
    private javax.swing.JComboBox<String> cb_EvtCliente;
    private javax.swing.JTextField codigo_inventario;
    private javax.swing.JTextArea descripcion_inventario;
    private javax.swing.JLabel error;
    private javax.swing.JFormattedTextField ftf_EvtFecha;
    private javax.swing.JFormattedTextField ftf_EvtHora;
    private javax.swing.JLabel imagen_principal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JDialog jd_cliente;
    private javax.swing.JDialog jd_evento;
    private javax.swing.JDialog jd_inventario;
    private javax.swing.JDialog jd_personal;
    private javax.swing.JLabel jl_AddEvt;
    private javax.swing.JLabel jl_DelEvt;
    private javax.swing.JLabel jl_EditEvt;
    private javax.swing.JTable jt_Evts;
    private javax.swing.JTable jt_inventario;
    private javax.swing.JTable jt_personal;
    private javax.swing.JLabel label_cliente;
    private javax.swing.JLabel label_eventos;
    private javax.swing.JLabel label_inventario;
    private javax.swing.JLabel label_menu;
    private javax.swing.JLabel label_personal;
    private javax.swing.JTextField nombre_inventario;
    private javax.swing.JSpinner sp_EvtDur;
    private javax.swing.JSpinner sp_EvtPersonas;
    private javax.swing.JTextField telefono_cliente;
    private javax.swing.JTextField tf_EvtTipo;
    private javax.swing.JTextField tf_EvtUbicacion;
    private javax.swing.JTextField tf_nombrePersonal;
    private javax.swing.JTextField tf_puestoPersonal;
    private javax.swing.JTextField tf_telefonoPersonal;
    // End of variables declaration//GEN-END:variables
    int idBuscar;
    ArrayList listaCambio = new ArrayList();

    public int conteoParaPersonal() {
        int temp = 0;
        try {
            Statement statement = con.createStatement();
            ResultSet rs;
            rs = statement.executeQuery("select count(id) from Personal;");
            while (rs.next()) {
                temp = rs.getInt(1);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return temp;
    }

    public int[] idPersonal() {
        int[] id = new int[conteoParaPersonal()];
        try {
            Statement statement = con.createStatement();
            ResultSet rs;
            rs = statement.executeQuery("select id from Personal;");
            int contador = 0;
            while (rs.next()) {
                id[contador] = rs.getInt(1);
                contador++;
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return id;
    }

    public int[] telefonoPersonal() {
        int[] telefono = new int[conteoParaPersonal()];
        try {
            Statement statement = con.createStatement();
            ResultSet rs;
            rs = statement.executeQuery("select teléfono from Personal;");
            int contador = 0;
            while (rs.next()) {
                telefono[contador] = rs.getInt(1);
                contador++;
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return telefono;
    }

    public String[] nombrePersonal() {
        String[] nombre = new String[conteoParaPersonal()];
        try {
            Statement statement = con.createStatement();
            ResultSet rs;
            rs = statement.executeQuery("select nombre from Personal;");
            int contador = 0;
            while (rs.next()) {
                nombre[contador] = rs.getString(1);
                contador++;
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return nombre;
    }

    public String[] puestoPersonal() {
        String[] puesto = new String[conteoParaPersonal()];
        try {
            Statement statement = con.createStatement();
            ResultSet rs;
            rs = statement.executeQuery("select puesto from Personal;");
            int contador = 0;
            while (rs.next()) {
                puesto[contador] = rs.getString(1);
                contador++;
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return puesto;
    }

    public void ReloadEvents() {
        try {
            Statement st = con.createStatement();

            ResultSet rs = st.executeQuery("select * from Evento");
            DefaultTableModel modelo = (DefaultTableModel) jt_Evts.getModel();
            while (modelo.getRowCount() > 0) {
                modelo.removeRow(0);
            }
            while (rs.next()) {
                modelo.addRow(new Object[]{rs.getInt(1), rs.getString(2), rs.getString(3), rs.getInt(4), rs.getDate(5), rs.getInt(6), rs.getInt(7)});
            }
            jt_Evts.setModel(modelo);
            rs.close();
            st.close();
        } catch (SQLException E) {

        }
    }

    public void actualizar(JTable jt_personal) {
        String[] columnas = new String[4];
        columnas[0] = "ID";
        columnas[1] = "Teléfono";
        columnas[2] = "Nombre";
        columnas[3] = "Puesto";
        int size = conteoParaPersonal();
        String[][] contenido = new String[size][4];
        int[] id = idPersonal();
        int[] telefono = telefonoPersonal();
        String[] nombre = nombrePersonal();
        String[] puesto = puestoPersonal();
        for (int i = 0; i < size; i++) {
            contenido[i][0] = id[i] + "";
            contenido[i][1] = telefono[i] + "";
            contenido[i][2] = nombre[i] + "";
            contenido[i][3] = puesto[i] + "";
        }
        DefaultTableModel modelo = new DefaultTableModel(contenido, columnas);
        jt_personal.setModel(modelo);
    }

    public ArrayList listaParaCambio(int idBuscar) {
        ArrayList lista = new ArrayList();
        try {
            Statement statement = con.createStatement();
            ResultSet rs;
            rs = statement.executeQuery("select teléfono from Personal where id = '" + idBuscar + "'");
            while (rs.next()) {
                lista.add(rs.getInt(1));
            }
            rs = statement.executeQuery("select nombre from Personal where id = '" + idBuscar + "'");
            while (rs.next()) {
                lista.add(rs.getString(1));
            }
            rs = statement.executeQuery("select puesto from Personal where id = '" + idBuscar + "'");
            while (rs.next()) {
                lista.add(rs.getString(1));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return lista;
    }

    public void cambiarTelefono() {
        String nuevo = JOptionPane.showInputDialog(this, "Escriba el nuevo teléfono", "Cambio de teléfono", JOptionPane.QUESTION_MESSAGE);
        if (nuevo != null) {
            int nuevoTelefono = Integer.parseInt(nuevo);
            try {
                listaCambio = listaParaCambio(idBuscar);
                String nombre = (String) listaCambio.get(1);
                String puesto = (String) listaCambio.get(2);
                Statement statement = con.createStatement();
                ResultSet rs;
                rs = statement.executeQuery("select* from Personal where id = '" + idBuscar + "'");
                while (rs.next()) {
                    PreparedStatement update = con.prepareStatement("update Personal set teléfono = ?"
                            + ", nombre = ?, puesto = ? where id = '" + idBuscar + "'");
                    update.setInt(1, nuevoTelefono);
                    update.setString(2, nombre);
                    update.setString(3, puesto);
                    update.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Se ha cambiado el teléfono.");
                }
                actualizar(jt_personal);
            } catch (SQLException e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "No se ha cambiado el teléfono.");
        }
    }

    public void cambiarNombre() {
        String nuevoNombre = JOptionPane.showInputDialog(this, "Escriba el nuevo nombre", "Cambio de nombre", JOptionPane.QUESTION_MESSAGE);
        if (nuevoNombre != null) {
            try {
                listaCambio = listaParaCambio(idBuscar);
                int telefono = (Integer) listaCambio.get(0);
                String puesto = (String) listaCambio.get(2);
                Statement statement = con.createStatement();
                ResultSet rs;
                rs = statement.executeQuery("select* from Personal where id = '" + idBuscar + "'");
                while (rs.next()) {
                    PreparedStatement update = con.prepareStatement("update Personal set teléfono = ?"
                            + ", nombre = ?, puesto = ? where id = '" + idBuscar + "'");
                    update.setInt(1, telefono);
                    update.setString(2, nuevoNombre);
                    update.setString(3, puesto);
                    update.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Se ha cambiado el nombre.");
                }
                actualizar(jt_personal);
            } catch (SQLException e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "No se ha cambiado el nombre.");
        }
    }

    public void cambiarPuesto() {
        String nuevoPuesto = JOptionPane.showInputDialog(this, "Escriba el nuevo puesto", "Cambio de puesto", JOptionPane.QUESTION_MESSAGE);
        if (nuevoPuesto != null) {
            try {
                listaCambio = listaParaCambio(idBuscar);
                int telefono = (Integer) listaCambio.get(0);
                String nombre = (String) listaCambio.get(1);
                Statement statement = con.createStatement();
                ResultSet rs;
                rs = statement.executeQuery("select* from Personal where id = '" + idBuscar + "'");
                while (rs.next()) {
                    PreparedStatement update = con.prepareStatement("update Personal set teléfono = ?"
                            + ", nombre = ?, puesto = ? where id = '" + idBuscar + "'");
                    update.setInt(1, telefono);
                    update.setString(2, nombre);
                    update.setString(3, nuevoPuesto);
                    update.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Se ha cambiado el puesto.");
                }
                actualizar(jt_personal);
            } catch (SQLException e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "No se ha cambiado el puesto.");
        }
    }

    public void borrarPersonal() {
        int seguro = JOptionPane.showConfirmDialog(this, "Seguro que desea eliminar esta persona?");
        if (seguro == JOptionPane.YES_OPTION) {
            try {
                listaCambio = listaParaCambio(idBuscar);
                Statement statement = con.createStatement();
                ResultSet rs;
                rs = statement.executeQuery("select* from Personal where id = '" + idBuscar + "'");
                while (rs.next()) {
                    PreparedStatement delete = con.prepareStatement("delete from Personal where id = '" + idBuscar + "'");
                    delete.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Se ha borrado la persona.");
                }
                actualizar(jt_personal);
            } catch (SQLException e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "No se ha borrado la persona.");
        }
    }

    public void refresh() {
        DefaultTableModel m = (DefaultTableModel) jt_inventario.getModel();
        int size = m.getRowCount();
        for (int i = 0; i < size; i++) {
            m.removeRow(0);
        }
        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select* from Inventario");
            while (rs.next()) {
                int id = rs.getInt(1);
                String nombre = rs.getString(2);
                String Descripcion = rs.getString(3);
                Object arr[] = {id, nombre, Descripcion};
                m.addRow(arr);
            }
        } catch (Exception e) {

        }
    }

    public void ag_cliente_sql() throws SQLException {
        Statement statement = con.createStatement();
        //  statement.executeQuery();
        statement.executeUpdate("INSERT  INTO Clientes(Telefono,correo,Nombre_Contacto,Nombre_Empresa)  " + "VALUES (" + Integer.parseInt(this.telefono_cliente.getText()) + ", " + "'" + this.Nombre_Cliente.getText() + "'" + ", " + "'" + this.Contacto_Cliente.getText() + "'" + ", " + "'" + this.Cliente_Empresa.getText() + "'" + " )");
    }

    public void agregar_tabla() {
        Cliente cliente = new Cliente(clientes.size(), Integer.parseInt(this.telefono_cliente.getText()), this.Nombre_Cliente.getText(), this.Contacto_Cliente.getText(), this.Cliente_Empresa.getText());
        clientes.add(cliente);
        DefaultTableModel ModeloTabla = (DefaultTableModel) this.Tabla_Clientes.getModel();

        while (ModeloTabla.getRowCount() > 0) {
            ModeloTabla.removeRow(0);
        }

        for (int i = 0; i < clientes.size(); i++) {

            String[] Row = {clientes.get(i).getID() + "", clientes.get(i).getTelefono() + "", clientes.get(i).getCorreo(), clientes.get(i).getNombre_contact(), clientes.get(i).getNombre_empresa()};
            ModeloTabla.addRow(Row);

        }

        this.Tabla_Clientes.setModel(ModeloTabla);
    }

    public void cliente() throws SQLException {
        Statement consu = con.createStatement();

        ResultSet result1 = consu.executeQuery("select ID,Teléfono,Correo,Nombre_Contacto,Nombre_Empresa  from Clientes");

        while (result1.next()) {
            String nombri = result1.getString("ID");
            String numeri = result1.getString("Teléfono");
            String correo = result1.getString("Correo");
            String contacto = result1.getString("Nombre_Contacto");
            String empresa = result1.getString("Nombre_Empresa");
            Cliente cliente = new Cliente(Integer.parseInt(nombri), Integer.parseInt(numeri), correo, contacto, empresa);
            clientes.add(cliente);
        }
    }
}
